{"version":3,"sources":["Components/TareaForm.js","Components/Tarea.js","App.js","reportWebVitals.js","index.js"],"names":["TareaForm","props","useState","inputText","setInputText","validacion","setValidacion","className","onSubmit","e","preventDefault","trim","nuevaTarea","type","value","onChange","event","target","Tarea","tarea","onClick","borrar","id","LOCAL_STOREGA_KEY","App","listaTarea","setListaTarea","useEffect","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","listaFiltrada","filter","index","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAsCeA,EAnCG,SAACC,GACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAgBA,OACE,gCACE,uBAAMC,UAAU,aAAaC,SAblB,SAACC,GACdA,EAAEC,iBACuB,KAArBP,EAAUQ,QACZV,EAAMW,WAAWT,GACjBC,EAAa,IACbE,GAAc,IAEdA,GAAc,IAMd,UACE,uBACEC,UAAU,QACVM,KAAK,OACLC,MAAOX,EACPY,SArBkB,SAACC,GACzBZ,EAAaY,EAAMC,OAAOH,UAsBtB,wBAAQP,UAAU,oBAAlB,6BAEAF,GACA,qBAAKE,UAAU,aAAf,8CCdOW,EAhBD,SAACjB,GAIb,OACE,qBAAKM,UAAU,QAAf,SACE,qBAAIA,UAAU,cAAd,UACGN,EAAMkB,MACP,uBAAON,KAAK,aACZ,wBAAQN,UAAU,iBAAiBa,QARrB,WAClBnB,EAAMoB,OAAOpB,EAAMqB,KAOf,qBCPFC,G,MAAoB,cAsCXC,MArCf,WACE,MAAoCtB,mBAAS,IAA7C,mBAAOuB,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACR,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQT,IACjDK,GACFF,EAAcE,KAEf,IAEHD,qBAAU,WACRI,aAAaE,QAAQV,EAAmBM,KAAKK,UAAUT,MACtD,CAACA,IAEJ,IAIMJ,EAAS,SAACC,GACd,IAAMa,EAAgBV,EAAWW,QAAO,SAAC3B,EAAG4B,GAAJ,OAAcA,IAAUf,KAChEI,EAAcS,IAGhB,OACE,qBAAK5B,UAAU,OAAf,SACE,sBAAKA,UAAU,MAAf,UACE,4CACA,cAAC,EAAD,CAAWK,WAbE,SAACO,GAClBO,EAAc,CAACP,GAAF,mBAAYM,QAcpBA,EAAWa,KAAI,SAAC7B,EAAG4B,GAAJ,OACd,cAAC,EAAD,CAAOlB,MAAOV,EAAGY,OAAQA,EAAQC,GAAIe,aCxBhCE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c01f1558.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst TareaForm = (props) => {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [validacion, setValidacion] = useState(true);\r\n\r\n  const manejarFormulario = (event) => {\r\n    setInputText(event.target.value);\r\n  };\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if (inputText.trim() !== \"\") {\r\n      props.nuevaTarea(inputText);\r\n      setInputText(\"\");\r\n      setValidacion(true);\r\n    } else {\r\n      setValidacion(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"contenedor\" onSubmit={submit}>\r\n        <input\r\n          className=\"input\"\r\n          type=\"text\"\r\n          value={inputText}\r\n          onChange={manejarFormulario}\r\n        ></input>\r\n        <button className=\"btn btn-secondary\">Crear tarea</button>\r\n      </form>\r\n      {!validacion && (\r\n        <div className=\"validacion\"> AÃ±ada una tarea porfavor</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default TareaForm;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst Tarea = (props) => {\r\n  const borrarTarea = () => {\r\n    props.borrar(props.id);\r\n  };\r\n  return (\r\n    <div className=\"tarea\">\r\n      <li className=\"listaTareas\">\r\n        {props.tarea}\r\n        <input type=\"checkbox\"></input>\r\n        <button className=\"btn btn-danger\" onClick={borrarTarea}>\r\n          X\r\n        </button>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\nexport default Tarea;\r\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport TareaForm from \"./Components/TareaForm\";\nimport Tarea from \"./Components/Tarea\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nconst LOCAL_STOREGA_KEY = \"react-todo\";\nfunction App() {\n  const [listaTarea, setListaTarea] = useState([]);\n\n  useEffect(() => {\n    const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STOREGA_KEY));\n    if (storageTodos) {\n      setListaTarea(storageTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STOREGA_KEY, JSON.stringify(listaTarea));\n  }, [listaTarea]);\n\n  const nuevaTarea = (tarea) => {\n    setListaTarea([tarea, ...listaTarea]);\n  };\n\n  const borrar = (id) => {\n    const listaFiltrada = listaTarea.filter((e, index) => index !== id);\n    setListaTarea(listaFiltrada);\n  };\n\n  return (\n    <div className=\"Main\">\n      <div className=\"App\">\n        <h1>React Todo</h1>\n        <TareaForm nuevaTarea={nuevaTarea}></TareaForm>\n\n        {listaTarea.map((e, index) => (\n          <Tarea tarea={e} borrar={borrar} id={index}></Tarea>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}